package com.example.stocksviewer.model.entity

import androidx.room.Entity
import androidx.room.PrimaryKey

class InfoRequest : ArrayList<InfoItem>()

@Entity(tableName = "infoItems")
data class InfoItem(
    val ask: Double,
    val askSize: Long,
    val averageDailyVolume10Day: Long,
    val averageDailyVolume3Month: Long,
    val bid: Double,
    val bidSize: Long,
    val bookValue: Double,
    val currency: String,
    val epsForward: Double,
    val epsTrailingTwelveMonths: Double,
    val exchange: String,
    val exchangeDataDelayedBy: Long,
    val exchangeTimezoneName: String,
    val exchangeTimezoneShortName: String,
    val fiftyDayAverage: Double,
    val fiftyDayAverageChange: Double,
    val fiftyDayAverageChangePercent: Double,
    val fiftyTwoWeekHigh: Double,
    val fiftyTwoWeekHighChange: Double,
    val fiftyTwoWeekHighChangePercent: Double,
    val fiftyTwoWeekLow: Double,
    val fiftyTwoWeekLowChange: Double,
    val fiftyTwoWeekLowChangePercent: Double,
    val financialCurrency: String?,
    val forwardPE: Double,
    val fullExchangeName: String,
    val gmtOffSetMilliseconds: Int,
    val language: String,
    val longName: String?,
    val market: String,
    val marketCap: Long,
    val marketState: String,
    val messageBoardId: String?,
    val priceHint: Long,
    val priceToBook: Double,
    val quoteSourceName: String?,
    val quoteType: String,
    val regularMarketChange: Double,
    val regularMarketChangePercent: Double,
    val regularMarketDayHigh: Double,
    val regularMarketDayLow: Double,
    val regularMarketOpen: Double,
    val regularMarketPreviousClose: Double,
    val regularMarketPrice: Double,
    val regularMarketVolume: Long,
    val sharesOutstanding: Long,
    val shortName: String,
    val sourceInterval: Long,
    @PrimaryKey val symbol: String,
    val tradeable: Boolean,
    val trailingAnnualDividendRate: Double?,
    val trailingAnnualDividendYield: Double?,
    val trailingPE: Double,
    val twoHundredDayAverage: Double,
    val twoHundredDayAverageChange: Double,
    val twoHundredDayAverageChangePercent: Double
)
